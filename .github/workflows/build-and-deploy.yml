name: Build and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  repository_dispatch:
    types:
      - pack-release

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login to docker Registry
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      - name: Login to koyeb Registry
        run: echo "${{ secrets.KOYEB_REGISTRY_PASSWORD }}" | docker login -u '${{ secrets.KOYEB_REGISTRY_USERNAME }}' https://registry.prod.koyeb.com --password-stdin
      - name: Determine download URL for latest pack
        id: pack-download-url
        uses: actions/github-script@0.4.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          result-encoding: string
          script: |
            return github.repos.getLatestRelease({
                owner: "buildpacks",
                repo: "pack"
            }).then(result => {
                return result.data.assets
                  .filter(a => a.name.includes("linux"))
                  .filter(a => !a.name.includes("arm64"))
                  .map(a => a.browser_download_url)[0];
            })
      - name: Install pack
        run: |
          curl -s -L -o pack.tgz ${{ steps.pack-download-url.outputs.result }}
          tar -xvf pack.tgz
      - name: Build images
        run: |
          PACK_CMD=./pack make images
      - name: Deploy images
        if: (github.event_name == 'repository_dispatch') || (github.event_name == 'push' && github.ref == 'refs/heads/main')
        run: |
          # publish base images
          docker tag koyeb/pack:20-cnb registry.prod.koyeb.com/koyeb/pack:20-cnb
          docker tag koyeb/pack:20-cnb-build registry.prod.koyeb.com/koyeb/pack:20-cnb-build
          docker push koyeb/pack:20-cnb
          docker push koyeb/pack:20-cnb-build
          docker push registry.prod.koyeb.com/koyeb/pack:20-cnb
          docker push registry.prod.koyeb.com/koyeb/pack:20-cnb-build
      - name: Build
        run: |
          PACK_CMD=./pack make build-heroku

          # patch stack registry for internal version
          make patch-builder-run-image registry.prod.koyeb.com/koyeb
          REGISTRY=registry.prod.koyeb.com/koyeb PACK_CMD=./pack make build-heroku
      - name: Deploy
        if: (github.event_name == 'repository_dispatch') || (github.event_name == 'push' && github.ref == 'refs/heads/main')
        run: |
          # publish builder
          docker tag koyeb/builder:heroku-20 koyeb/builder:latest
          docker tag koyeb/builder:heroku-20 koyeb/builder:heroku
          docker tag registry.prod.koyeb.com/koyeb/builder:heroku-20 registry.prod.koyeb.com/koyeb/builder:latest
          docker tag registry.prod.koyeb.com/koyeb/builder:heroku-20 registry.prod.koyeb.com/koyeb/builder:heroku

          for tag in latest heroku heroku-20; do
            docker push koyeb/builder:$tag
            docker push registry.prod.koyeb.com/koyeb/builder:$tag
          done
      - name: Clean up
        run: make clean-linux
